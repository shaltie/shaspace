/*! angular-drupal 2015-07-16 */
function drupal(a,b,c,d){var e=c.sitePath,f=e+"/?q="+c.endpoint;this.sitePath=e,this.restPath=f,this.token=function(){if("undefined"!=typeof this.drupal){if(this.drupal.drupalToken)return console.log('grabbed token from "this" memory: '+d),b(function(a,b){setTimeout(function(){a(this.drupal.drupalToken)},100)})}else if(d)return console.log("grabbed token from memory: "+d),b(function(a,b){setTimeout(function(){a(d)},100)});return a.get(e+"/?q=services/session/token").then(function(a){return 200==a.status?d=a.data:void 0})},this.connect=function(){var b="undefined"!=typeof this.token?this.token:this.drupal.token;return b().then(function(b){return a({method:"POST",url:f+"/system/connect.json",headers:{"X-CSRF-Token":b}}).then(function(a){return 200==a.status?a.data:void 0})})},this.user_login=function(b,c){var d=this;return a({method:"POST",url:f+"/user/login.json",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(a){var b=[];for(var c in a)b.push(encodeURIComponent(c)+"="+encodeURIComponent(a[c]));return b.join("&")},data:{username:b,password:c}}).then(function(a){return d.drupalUser=a.user,d.drupalToken=null,d.connect()})},this.user_logout=function(){var b=this;return this.token().then(function(c){return a({method:"POST",url:f+"/user/logout.json",headers:{"X-CSRF-Token":c}}).then(function(a){return this.drupal.drupalUser=drupal_user_defaults(),this.drupal.drupalToken=null,b.connect()})})},this.user_register=function(b){return this.token().then(function(c){return a({method:"POST",url:f+"/user/register.json",headers:{"Content-Type":"application/json","X-CSRF-Token":c},data:{account:b}}).then(function(a){return a.data})})},this.comment_load=function(b){return a.get(this.restPath+"/comment/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.file_load=function(b){return a.get(this.restPath+"/file/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.node_load=function(b){return a.get(this.restPath+"/node/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.taxonomy_term_load=function(b){return a.get(this.restPath+"/taxonomy_term/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.taxonomy_vocabulary_load=function(b){return a.get(this.restPath+"/taxonomy_vocabulary/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.user_load=function(b){return a.get(this.restPath+"/user/"+b+".json").then(function(a){return 200==a.status?a.data:void 0})},this.comment_save=function(b){var c=null,d=null;b.cid?(c="PUT",d=this.restPath+"/comment/"+b.cid+".json"):(c="POST",d=this.restPath+"/comment.json");var e={method:c,url:d,headers:{"Content-Type":"application/json"},data:b};return this.token().then(function(b){return e.headers["X-CSRF-Token"]=b,a(e).then(function(a){return 200==a.status?a.data:void 0})})},this.file_save=function(b){var c={method:"POST",url:this.restPath+"/file.json",headers:{"Content-Type":"application/json"},data:{file:b}};return this.token().then(function(b){return c.headers["X-CSRF-Token"]=b,a(c).then(function(a){return 200==a.status?a.data:void 0})})},this.node_save=function(b){var c=null,d=null;b.nid?(c="PUT",d=this.restPath+"/node/"+b.nid+".json"):(c="POST",d=this.restPath+"/node.json");var e={method:c,url:d,headers:{"Content-Type":"application/json"},data:{node:b}};return this.token().then(function(b){return e.headers["X-CSRF-Token"]=b,a(e).then(function(a){return 200==a.status?a.data:void 0})})},this.taxonomy_term_save=function(b){var c=null,d=null;b.tid?(c="PUT",d=this.restPath+"/taxonomy_term/"+b.tid+".json"):(c="POST",d=this.restPath+"/taxonomy_term.json");var e={method:c,url:d,headers:{"Content-Type":"application/json"},data:b};return this.token().then(function(b){return e.headers["X-CSRF-Token"]=b,a(e).then(function(a){return 200==a.status?a.data:void 0})})},this.taxonomy_vocabulary_save=function(b){var c=null,d=null;b.vid?(c="PUT",d=this.restPath+"/taxonomy_vocabulary/"+b.vid+".json"):(c="POST",d=this.restPath+"/taxonomy_vocabulary.json");var e={method:c,url:d,headers:{"Content-Type":"application/json"},data:b};return this.token().then(function(b){return e.headers["X-CSRF-Token"]=b,a(e).then(function(a){return 200==a.status?a.data:void 0})})},this.user_save=function(b){var c=null,d=null;b.uid?(c="PUT",d=this.restPath+"/user/"+b.uid+".json"):(c="POST",d=this.restPath+"/user.json");var e={method:c,url:d,headers:{"Content-Type":"application/json"},data:b};return this.token().then(function(b){return e.headers["X-CSRF-Token"]=b,a(e).then(function(a){return 200==a.status?a.data:void 0})})},this.comment_delete=function(b){var c=this;return this.token().then(function(d){return a({method:"DELETE",url:c.restPath+"/comment/"+b+".json",headers:{"Content-Type":"application/json","X-CSRF-Token":d}}).then(function(a){return 200==a.status?a.data:void 0})})},this.node_delete=function(b){var c=this;return this.token().then(function(d){return a({method:"DELETE",url:c.restPath+"/node/"+b+".json",headers:{"Content-Type":"application/json","X-CSRF-Token":d}}).then(function(a){return 200==a.status?a.data:void 0})})},this.taxonomy_term_delete=function(b){var c=this;return this.token().then(function(d){return a({method:"DELETE",url:c.restPath+"/taxonomy_term/"+b+".json",headers:{"Content-Type":"application/json","X-CSRF-Token":d}}).then(function(a){return 200==a.status?a.data:void 0})})},this.taxonomy_vocabulary_delete=function(b){var c=this;return this.token().then(function(d){return a({method:"DELETE",url:c.restPath+"/taxonomy_vocabulary/"+b+".json",headers:{"Content-Type":"application/json","X-CSRF-Token":d}}).then(function(a){return 200==a.status?a.data:void 0})})},this.user_delete=function(b){var c=this;return this.token().then(function(d){return a({method:"DELETE",url:c.restPath+"/user/"+b+".json",headers:{"Content-Type":"application/json","X-CSRF-Token":d}}).then(function(a){return 200==a.status?a.data:void 0})})},this.comment_index=function(b){var c=this.restPath+"/comment.json&"+drupal_entity_index_build_query_string(b);return a.get(c).then(function(a){return 200==a.status?a.data:void 0})},this.node_index=function(b){var c=this.restPath+"/node.json&"+drupal_entity_index_build_query_string(b);return a.get(c).then(function(a){return 200==a.status?a.data:void 0})},this.taxonomy_term_index=function(b){var c=this.restPath+"/taxonomy_term.json&"+drupal_entity_index_build_query_string(b);return a.get(c).then(function(a){return 200==a.status?a.data:void 0})},this.taxonomy_vocabulary_index=function(b){var c=this.restPath+"/taxonomy_vocabulary.json&"+drupal_entity_index_build_query_string(b);return a.get(c).then(function(a){return 200==a.status?a.data:void 0})},this.user_index=function(b){var c=this.restPath+"/user.json&"+drupal_entity_index_build_query_string(b);return a.get(c).then(function(a){return 200==a.status?a.data:void 0})},this.views_json=function(b){var c=this.sitePath+"/"+b;return a.get(c).then(function(a){if(200==a.status){if(a.data.view){var b=a.data.view,c=[];return angular.forEach(a.data[b.root],function(a){var d=a[b.child];c.push(d)}),c}return a.data}})}}function drupal_entity_types(){try{return["comment","file","node","taxonomy_term","taxonomy_vocabulary","user"]}catch(a){console.log("drupal_entity_types - "+a)}}function drupal_entity_primary_key(a){try{var b=null;switch(a){case"comment":b="cid";break;case"file":b="fid";break;case"node":b="nid";break;case"taxonomy_term":b="tid";break;case"taxonomy_vocabulary":b="vid";break;case"user":b="uid";break;default:var c=a+"_primary_key";if(drupal_function_exists(c)){var d=window[c];b=d(a)}else{var e="drupal_entity_primary_key - unsupported entity type ("+a+") - to add support, declare "+c+"() and have it return the primary key column name as a string";console.log(e)}}return b}catch(f){console.log("drupal_entity_primary_key - "+f)}}function drupal_entity_primary_key_title(a){try{var b=null;switch(a){case"comment":b="subject";break;case"file":b="filename";break;case"node":b="title";break;case"taxonomy_term":b="name";break;case"taxonomy_vocabulary":b="name";break;case"user":b="name";break;default:console.log("drupal_entity_primary_key_title - unsupported entity type ("+a+")")}return b}catch(c){console.log("drupal_entity_primary_key_title - "+c)}}function drupal_function_exists(name){try{return"function"==eval("typeof "+name)}catch(error){alert("drupal_function_exists - "+error)}}function drupal_entity_index_build_query_string(a){try{var b="";if(!a)return b;if(a.fields){for(var c="",d=0;d<a.fields.length;d++)c+=encodeURIComponent(a.fields[d])+",";""!=c&&(c="fields="+c.substring(0,c.length-1),b+=c+"&")}if(a.parameters){var e="";for(var f in a.parameters)if(a.parameters.hasOwnProperty(f)){var g=encodeURIComponent(f),h=encodeURIComponent(a.parameters[f]);e+="parameters["+g+"]="+h+"&"}""!=e&&(e=e.substring(0,e.length-1),b+=e+"&")}if(a.parameters_op){var i="";for(var j in a.parameters_op)if(a.parameters_op.hasOwnProperty(j)){var g=encodeURIComponent(j),h=encodeURIComponent(a.parameters_op[j]);i+="parameters_op["+g+"]="+h+"&"}""!=i&&(i=i.substring(0,i.length-1),b+=i+"&")}return"undefined"!=typeof a.page&&(b+="page="+encodeURIComponent(a.page)+"&"),"undefined"!=typeof a.page_size&&(b+="pagesize="+encodeURIComponent(a.page_size)+"&"),b.substring(0,b.length-1)}catch(k){console.log("entity_index_build_query_string - "+k)}}function drupal_user_defaults(){try{return{uid:0,hostname:null,roles:{1:"anonymous user"},cache:0,timestamp:Date.now()/1e3|0}}catch(a){console.log("drupal_user_defaults - "+a)}}angular.module("angular-drupal",[]).service("drupal",["$http","$q","drupalSettings",drupal]).value("drupalSettings",null).value("drupalToken",null).value("drupalUser",null);